/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat (TomEE)/9.0.82 (8.0.16)
 * Generated at: 2024-05-11 13:26:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tag.web;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _005fLayout_tag
    extends javax.servlet.jsp.tagext.SimpleTagSupport
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.servlet.jsp.JspContext jspContext;
  private java.io.Writer _jspx_sout;
  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public void setJspContext(javax.servlet.jsp.JspContext ctx) {
    super.setJspContext(ctx);
    java.util.ArrayList _jspx_nested = null;
    java.util.ArrayList _jspx_at_begin = null;
    java.util.ArrayList _jspx_at_end = null;
    this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(this, ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);
  }

  public javax.servlet.jsp.JspContext getJspContext() {
    return this.jspContext;
  }
  private javax.servlet.jsp.tagext.JspFragment css_custom;
  private javax.servlet.jsp.tagext.JspFragment content;
  private javax.servlet.jsp.tagext.JspFragment js_custom;

  public javax.servlet.jsp.tagext.JspFragment getCss_custom() {
    return this.css_custom;
  }

  public void setCss_custom(javax.servlet.jsp.tagext.JspFragment css_custom) {
    this.css_custom = css_custom;
    jspContext.setAttribute("css_custom", css_custom);
  }

  public javax.servlet.jsp.tagext.JspFragment getContent() {
    return this.content;
  }

  public void setContent(javax.servlet.jsp.tagext.JspFragment content) {
    this.content = content;
    jspContext.setAttribute("content", content);
  }

  public javax.servlet.jsp.tagext.JspFragment getJs_custom() {
    return this.js_custom;
  }

  public void setJs_custom(javax.servlet.jsp.tagext.JspFragment js_custom) {
    this.js_custom = js_custom;
    jspContext.setAttribute("js_custom", js_custom);
  }

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    return _jsp_instancemanager;
  }

  private void _jspInit(javax.servlet.ServletConfig config) {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(config.getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(config);
  }

  public void _jspDestroy() {
  }

  public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException {
    javax.servlet.jsp.PageContext _jspx_page_context = (javax.servlet.jsp.PageContext)jspContext;
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) _jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) _jspx_page_context.getResponse();
    javax.servlet.http.HttpSession session = _jspx_page_context.getSession();
    javax.servlet.ServletContext application = _jspx_page_context.getServletContext();
    javax.servlet.ServletConfig config = _jspx_page_context.getServletConfig();
    javax.servlet.jsp.JspWriter out = jspContext.getOut();
    _jspInit(config);
    jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,jspContext);
    if( getCss_custom() != null ) 
      _jspx_page_context.setAttribute("css_custom", getCss_custom());
    if( getContent() != null ) 
      _jspx_page_context.setAttribute("content", getContent());
    if( getJs_custom() != null ) 
      _jspx_page_context.setAttribute("js_custom", getJs_custom());

    try {
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>Esfinge Virtual Lab</title>\r\n");
      out.write("		<link href=\"webjars/bootstrap/4.3.1/css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("		<link href=\"webjars/datatables/1.10.19/css/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("		<link href=\"webjars/font-awesome/5.9.0/css/all.min.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("		<link href=\"webjars/leaflet/1.5.1/leaflet.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("		<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("/resources/css/app.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("     	");
      ((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();
      _jspx_sout = null;
      if (getCss_custom() != null) {
        getCss_custom().invoke(_jspx_sout);
      }
      out.write("\r\n");
      out.write(" 	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<header>\r\n");
      out.write("			<div class=\"navbar navbar-dark bg-dark box-shadow\">\r\n");
      out.write("				<div class=\"container d-flex justify-content-between\">\r\n");
      out.write("					<a href=\"./\" class=\"navbar-brand d-flex align-items-center font-esfinge\">\r\n");
      out.write("					<img alt=\"Esfinge Framework Logo\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("/resources/images/esfinge_logo2.png\">&ensp;<strong>Esfinge Virtual Lab</strong>\r\n");
      out.write("					</a>\r\n");
      out.write("					<button class=\"navbar-toggler menu-link\" type=\"button\" data-toggle=\"1collapse\"\r\n");
      out.write("						data-target=\"#1navbarHeader\" aria-controls=\"navbarHeader\"\r\n");
      out.write("						aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("						<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("					</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</header>\r\n");
      out.write("		<div id=\"menu\" class=\"panel bg-dark\" role=\"navigation\">\r\n");
      out.write("        	<span class=\"menu-title font-esfinge\"> <strong>Esfinge Virtual Lab</strong></span>\r\n");
      out.write("	        <ul>\r\n");
      out.write("	            <li><a href=\"./\"><i class=\"fas fa-home\"></i>Home</a></li>\r\n");
      out.write("	            <li><a href=\"document.jsp\"><i class=\"fas fa-book\"></i>Documentation</a></li>\r\n");
      out.write("	            <li><a href=\"about.jsp\"><i class=\"fas fa-info-circle\"></i>About</a></li>\r\n");
      out.write("	        </ul>\r\n");
      out.write("	    </div>\r\n");
      out.write("		\r\n");
      out.write("    	");
      ((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();
      _jspx_sout = null;
      if (getContent() != null) {
        getContent().invoke(_jspx_sout);
      }
      out.write("\r\n");
      out.write("    	\r\n");
      out.write("    <!-- load jQuery library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("	<!-- load Bootstrap library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("	<!-- load dataTables library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/datatables/1.10.19/js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/datatables/1.10.19/js/dataTables.bootstrap4.min.js\"></script>\r\n");
      out.write("	<!-- load maskedinput library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/jquery-maskedinput/1.4.0/jquery.maskedinput.min.js\"></script>\r\n");
      out.write("	<!-- load underscore library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/underscorejs/1.8.3/underscore-min.js\"></script>\r\n");
      out.write("	<!-- load font-awesome library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/font-awesome/5.9.0/js/all.min.js\"></script>\r\n");
      out.write("	<!-- load leaflet library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"webjars/leaflet/1.5.1/leaflet.js\"></script>\r\n");
      out.write("		<!-- load jsonform library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("/resources/js/jsonform.js\"></script>\r\n");
      out.write("	<!-- load bigSlide library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("/resources/js/bigSlide.min.js\"></script>\r\n");
      out.write("	<!-- load alert.bootstrap library -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("/resources/js/alert.bootstrap.js\"></script>\r\n");
      out.write("	<!-- load javascript.app -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null));
      out.write("/resources/js/app/Initialize.js\"></script>\r\n");
      out.write(" 	\r\n");
      out.write(" 	");
      ((org.apache.jasper.runtime.JspContextWrapper) this.jspContext).syncBeforeInvoke();
      _jspx_sout = null;
      if (getJs_custom() != null) {
        getJs_custom().invoke(_jspx_sout);
      }
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" 	</body>\r\n");
      out.write("</html>");
    } catch( java.lang.Throwable t ) {
      if( t instanceof javax.servlet.jsp.SkipPageException )
          throw (javax.servlet.jsp.SkipPageException) t;
      if( t instanceof java.io.IOException )
          throw (java.io.IOException) t;
      if( t instanceof java.lang.IllegalStateException )
          throw (java.lang.IllegalStateException) t;
      if( t instanceof javax.servlet.jsp.JspException )
          throw (javax.servlet.jsp.JspException) t;
      throw new javax.servlet.jsp.JspException(t);
    } finally {
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,super.getJspContext());
      ((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();
    }
  }
}
